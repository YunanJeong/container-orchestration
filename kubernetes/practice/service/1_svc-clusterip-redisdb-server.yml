# Service 예제 - ClusterIP

# 정상동작 테스트 방법
# 대상 Pod(0_deploy_server-client-example.yml)를 미리 켜둔다
# Client Pod에 접속
  # kubectl get po
  # kubectl exec {podname} -it -- sh
# Client Pod에서 Server Pod에 접속되는지 확인
  # telnet svc-clusterip 3333
  # dbsize, GET count 등 명령어를 전송해서 결과가 얻어지는지 확인해보자

apiVersion: v1
kind: Service
metadata:
  name: svc-clusterip
spec:
  # type: ClusterIP # (default)

  # Service Port와 포트포워딩 정보
  # Service의 IP는 클러스터 내에서 접근가능하고, port(ServicePort)는 대상 Pod를 가리킨다.
  # Pod의 IP는 클러스터 내에서 접근가능하고, targetPort(PodPort)는 Pod 내 프로세스를 가리킨다.  
  ports:
    - protocol: TCP
      port: 3333        # service에서 open할 port
      targetPort: 6379  # 대상 Pod(container)에 open된 port # default: 위 port와 동일
  
  # Service에 연동될 대상 Pod 지정 (0_deploy_server-client-example.yml)
  selector:
    app: sampleapp
    tier: db
